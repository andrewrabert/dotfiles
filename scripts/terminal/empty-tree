#!/usr/bin/env python3
import argparse
import pathlib


def iter_dirs(root):
    other = set()
    dirs = set()

    stack = [root]
    while stack:
        try:
            for path in stack.pop().iterdir():
                if path.is_dir() and not path.is_symlink():
                    dirs.add(path)
                    stack.append(path)
                else:
                    other.add(path)
        except FileNotFoundError:
            pass

    return dirs, other


def empty_dirs(root):
    empty = set()
    dirs, other = iter_dirs(root)
    for d in dirs:
        subdirs, subfiles = iter_dirs(d)
        if not subfiles:
            empty.add(d)
    return empty


def main():
    parser = argparse.ArgumentParser(
        description='List the tops of empty directory trees.'
    )
    parser.add_argument(
        '-r', dest='remove', action='store_true',
        help='remove the trees from disk'
    )
    parser.add_argument('path', type=pathlib.Path, nargs='?', default='.')
    args = parser.parse_args()

    for path in reversed(sorted(empty_dirs(args.path))):
        print(path)
        if args.remove:
            # use instead of shutil.rmtree to ensure nothing added since scan
            try:
                path.rmdir()
            except FileNotFoundError:
                pass


if __name__ == '__main__':
    main()
