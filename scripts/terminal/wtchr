#!/bin/bash
set -e

INTERVAL=0.5
WAIT_UNTIL_DONE=
PATHS=./
INCLUDE=
EXCLUDE=
ADDITIONAL_OPTS=()

POSITIONAL=()

trap "exit 0" SIGINT
trap "kill_all" EXIT


kill_all() {
    jobs -rp | xargs -L 1 pkill -P &> /dev/null || true
    pkill -P $$ &> /dev/null || true
}


parse_args() {
    end_args=

    while [[ $# -gt 0 ]]; do
        key="$1"
        if [[ -z $end_args ]]; then
            case $key in
                -n|--interval)
                    INTERVAL="$2"
                    shift
                    shift
                    ;;
                -w|--wait)
                    WAIT_UNTIL_DONE=1
                    shift
                    ;;
                -p|--paths)
                    PATHS="$2"
                    shift
                    shift
                    ;;
                -i|--include)
                    INCLUDE="$2"
                    shift
                    shift
                    ;;
                -e|--exclude)
                    EXCLUDE="$2"
                    shift
                    shift
                    ;;
                *)
                    end_args=1
                    ;;
            esac
        fi

        if [[ ! -z $end_args ]]; then
            POSITIONAL+=("$1")
            shift
        fi
    done

    if [ ! -z "$INCLUDE" ]; then
        ADDITIONAL_OPTS+=("--include")
        ADDITIONAL_OPTS+=("$INCLUDE")

        if [ -z "$EXCLUDE" ]; then
            EXCLUDE='.*'
        fi
    fi

    if [ ! -z "$EXCLUDE" ]; then
        ADDITIONAL_OPTS+=("--exclude")
        ADDITIONAL_OPTS+=("$EXCLUDE")
    fi

    # FSEvents mixes file events into a single batch
    # Ex. "Created", "Removed", and "IsFile" may show up in a single event
    # Fucking bullshit
    # COMMENTED OUT 2018-03-21 - issues with autokill and kqueue
    #if [[ $(uname) == 'Darwin' ]]; then
    #    ADDITIONAL_OPTS+=('--monitor' 'kqueue_monitor')
    #fi

    set -- "${POSITIONAL[@]}"
    set -- "${ADDITIONAL_OPTS[@]}"


    if [ -z $POSITIONAL ]; then
        echo ERROR: No command provided
        exit 1
    fi
}


run() {
    while true; do
        if [[ -z $WAIT_UNTIL_DONE ]]; then
            kill_all
        fi

        if [[ -n $TMUX ]]; then
            # exit copy-mode
            tmux if -F -t $TMUX_PANE "#{pane_in_mode}" "send-keys -t $TMUX_PANE -X cancel"
        fi

        clear
        eval "${POSITIONAL[@]} &"

        if [[ -z $WAIT_UNTIL_DONE ]]; then
            disown
        else
            wait
        fi
        sleep "$INTERVAL"
        fswatch -r -l 0.1 --one-event $PATHS \
        "${ADDITIONAL_OPTS[@]}" \
        --event=Created \
        --event=Updated \
        --event=Removed \
        --event=Renamed \
        --event=OwnerModified \
        --event=AttributeModified \
        --event=MovedFrom \
        --event=MovedTo \
        --event=Link &> /dev/null
    done
}

parse_args "$@"
run
