#!/usr/bin/env sh
set -e

show_help() {
    cat << 'EOF'
Usage: preview [OPTIONS] FILE...

Preview files with syntax highlighting and metadata extraction.

OPTIONS:
  --no-color     Disable color output
  -h, --help     Show this help message
  --             End of options

EXAMPLES:
  preview file.txt
  preview --no-color file.py
  preview file1.txt file2.py file3.md
EOF
}

USE_COLOR=1
FULL_PREVIEW=

while [ $# -gt 0 ]; do
    case "$1" in
        -h|--help)
            show_help
            exit 0
            ;;
        --full)
            FULL_PREVIEW=1
            shift
            ;;
        --no-color)
            USE_COLOR=
            shift
            ;;
        --)
            shift
            break
            ;;
        -*)
            echo "error: unknown option '$1'" >&2
            echo "Use -h or --help for usage information." >&2
            exit 1
            ;;
        *)
            break
            ;;
    esac
done

default_preview() {
    # set line count to avoid unnecessary page length.
    # 1024 is overkill, but using $(tput lines) is not reliable.
    if [ -n "$USE_COLOR" ]; then
        color_arg='always'
    else
        color_arg='never'
    fi
    bat --color="$color_arg" -r :1024 --plain -- "$1"
}

identify_without_filename() {
    magick identify \
        -quiet \
        -format 'File name       : %m\nResolution      : %wx%h\nColorspace      : %[colorspace]\nBit-depth       : %z\n' \
        -- "$1"
}

print_delimiter() {
    printf '\n%*s\n\n' "40" '' | tr ' ' -
}

if [ $# -eq 0 ]; then
    echo 'error: missing argument' >&2
    exit 1
fi

preview_file() {
    local file="$1"
    if [ -d "$file" ]; then
        cd "$file" || exit 1
        fd --color=always --maxdepth=1
        return
    fi
    local mimetype=''
    local USE_XDG_MIME=1
    case "$file" in
        # xdg-mime incorrectly identifies all files ending with this as
        # application/x-trash
        # lf appends this when copying to a target that already exists.
        *'.~1~')
            USE_XDG_MIME=
            ;;
    esac
    if command -v xdg-mime > /dev/null && [ -n "$USE_XDG_MIME" ]; then
        # allows for overrides in ~/.local/share/mime/packages to work
        # on headless system.
        export XDG_CURRENT_DESKTOP="${XDG_CURRENT_DESKTOP:=kde}"

        mimetype="$(xdg-mime query filetype "$file")"
    else
        mimetype="$(file --brief --mime-type "$file")"
    fi
    case "$mimetype" in
        application/gzip|\
        application/x-rpm|\
        application/x-stuffit|\
        application/vnd.comicbook+zip|\
        application/vnd.comicbook-rar|\
        application/vnd.efi.img|\
        application/vnd.efi.iso|\
        application/vnd.google-earth.kmz|\
        application/vnd.ms-cab-compressed|\
        application/vnd.rar|\
        application/x-7z-compressed|\
        application/x-ace|\
        application/x-bzip-compressed-tar|\
        application/x-bzip2-compressed-tar|\
        application/x-cd-image|\
        application/x-compressed-tar|\
        application/x-iso9660-image|\
        application/x-pak|\
        application/x-rar|\
        application/x-raw-disk-image|\
        application/x-tar|\
        application/x-xz-compressed-tar|\
        application/x-zstd-compressed-tar|\
        application/zip|\
        application/zstd)
            extract -l -- "$file"
            ;;
        application/x-cue)
            extract -l -- "$file" 2>/dev/null || true
            print_delimiter
            cat -- "$file"
            ;;
        application/java-archive)
            extract --stdout -- "$file" 'META-INF/MANIFEST.MF'
            ;;
        audio/x-mod)
            # xdg-mime reports go.mod files as this
            default_preview "$file"
            ;;
        audio/x-mpegurl)
            default_preview "$file"
            ;;
        video/x-matroska)
            mkv-preview "$file"
            ;;
        audio/*|\
        video/*)
            ffprobe -hide_banner -- "$file" 2>&1
            ;;
        application/epub+zip)
            epubmeta -- "$file"
            ;;
        application/vnd.microsoft.portable-executable|\
        application/x-dosexec|\
        application/x-ms-dos-executable|\
        application/x-msdownload)
            exiftool -- "$file" || true
            extract -l -- "$file"
            ;;
        application/pdf|\
        image/gif|\
        image/x-canon-cr2|\
        image/x-canon-cr3)
            exiftool -- "$file"
            ;;
        application/vnd.iccprofile)
            iccdump -t desc "$file"
            ;;
        image/jxl)
            jxlinfo --verbose "$file"
            ;;
        image/tiff)
            tiffinfo -- "$file"
            ;;
        image/x-portable-pixmap|\
        image/vnd.microsoft.icon)
            identify_without_filename "$file"
            ;;
        image/*)
            #chafa -f sixel -s "$2x$3" --animate off --polite on "$file"
            identify_without_filename "$file"
            exiv2 "$file" 2> /dev/null | grep -v \
                -e '^File name       : ' \
                -e '^Image size      : ' \
                -e '^File size       : ' \
                -e '^MIME type       : ' \
                || true
            ;;
        application/octet-stream|'')
            case "$(printf %s "$file" | tr '[:upper:]' '[:lower:]')" in
                *.rvz)
                    extract -l -- "$file"
                    ;;
                *.umx)
                    ffprobe -hide_banner -- "$file" 2>&1
                    ;;
                *)
                    default_preview "$file"
            esac
            ;;
        *)
            default_preview "$file"
    esac
}

MULTI_PREVIEW=
if [ $# -gt 1 ]; then
    MULTI_PREVIEW=1
fi
while [ $# -gt 0 ]; do
    if [ -n "$MULTI_PREVIEW" ] || [ -n "$FULL_PREVIEW" ]; then
        printf '#### preview: %s\n' "$1"
    fi
    preview_file "$1"
    shift
    if [ $# -gt 0 ]; then
        echo
    fi
done
