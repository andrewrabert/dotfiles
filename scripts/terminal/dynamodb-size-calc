#!/usr/bin/env python3
import argparse
import json
import math
import string
import sys


MAX_SIZE = 400 * 1024


def calculate_size(value, is_nested=False):
    # Formulas taken from
    # https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/CapacityUnitCalculations.html
    size = 0
    if isinstance(value, str):
        size += len(value.encode())
    elif isinstance(value, (int, float)):
        num_digits = sum([1 for n in str(value) if n in string.digits])
        size += math.ceil(num_digits / 2) + 1
    elif isinstance(value, bool):
        size += 1
    elif value is None:
        size += 1
    elif isinstance(value, bytes):
        size += len(value)
    elif isinstance(value, list):
        size += 3
        for v in value:
            size += calculate_size(v)
    elif isinstance(value, dict):
        # No need to add 3 if the map is the root of the item
        if is_nested:
            size += 3

        for k, v in value.items():
            size += calculate_size(k, is_nested=True)
            size += calculate_size(v, is_nested=True)
    else:
        raise NotImplementedError
    return size


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '-n', '--nested', action='store_const', const=True,
        default=False,
        help='Set if the input is a nested element of an item'
    )
    parser.add_argument('json')
    args = parser.parse_args()

    with open(args.json) as handle:
        size = calculate_size(json.load(handle), is_nested=args.nested)

    if size > MAX_SIZE:
        print(
            f'error: item size {size} larger than max {MAX_SIZE}',
            file=sys.stderr
        )
    else:
        print(size)


if __name__ == '__main__':
    main()
