#!/usr/bin/env python3
import argparse
import collections
import json
import pathlib
import subprocess


def all_files(root):
    stack = [pathlib.Path(root)]
    files = []
    while stack:
        for path in stack.pop().iterdir():
            if path.is_file() and not path.is_symlink():
                files.append(path)
            elif path.is_dir():
                stack.append(path)
    return files


def sha256sum(path):
    result = subprocess.run(
        ['sha256sum', '--', str(path)],
        check=True,
        stdout=subprocess.PIPE)
    return result.stdout.decode().split()[0]


def _pretty_json(data):
    return json.dumps(data, indent=2, sort_keys=True)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        'path', type=pathlib.Path, default=[pathlib.Path], nargs='*')
    args = parser.parse_args()

    all_paths = collections.defaultdict(list)
    for root in args.path:
        root = root.absolute()
        for path in all_files(root):
            path = path.relative_to(root)
            all_paths[path].append(root)

    unique = []
    for k, v in all_paths.items():
        if len(v) == 1:
            continue
        path = v[0].joinpath(k)
        unique.append(str(path))

    print(_pretty_json(sorted(unique)))


if __name__ == '__main__':
    main()
