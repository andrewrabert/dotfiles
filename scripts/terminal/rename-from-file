#!/usr/bin/env python3
import argparse
import pathlib
import sys


def main():
    parser = argparse.ArgumentParser()
    parser.description = f'{parser.prog} directory'
    parser.add_argument('directory', type=pathlib.Path)
    parser.add_argument('source', type=pathlib.Path)
    parser.add_argument('-d', '--dryrun', action='store_true')
    parser.add_argument('--type', choices=['f', 'd'], default='f')
    args = parser.parse_args()

    titles = [
        line.replace('/', '-')
        for line in args.source.read_text().split('\n')
        if line
    ]

    paths = []
    for path in args.directory.iterdir():
        if path == args.source:
            continue
        if args.type == 'f':
            if path.is_file():
                paths.append(path)
        elif args.type == 'd':
            if path.is_dir():
                paths.append(path)


    if len(paths) != len(titles):
        print(
            f'error: found {len(paths)} paths but only {len(titles)} titles',
            file=sys.stderr
        )
        sys.exit(1)

    new_names = {}
    for title, path in zip(titles, sorted(paths)):
        new_names[path] = title

    for path, new_name in new_names.items():
        target = path.with_name(new_name)
        print(path.name)
        print(target.name)
        print()
        if not args.dryrun:
            path.rename(target)


if __name__ == '__main__':
    main()
