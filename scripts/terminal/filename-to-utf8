#!/usr/bin/env python3
import argparse
import os
import pathlib

import charset_normalizer


def all_files(*paths):
    stack = []
    files = set()
    for path in paths:
        if path.is_file():
            files.add(path)
        else:
            stack.append(path)

    while stack:
        for path in stack.pop().iterdir():
            if path.is_dir():
                stack.append(path)
            else:
                files.add(path)
    return files




def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-d', '--dryrun', action='store_true')
    parser.add_argument('path', type=pathlib.Path, nargs='+')
    args = parser.parse_args()

    for path in all_files(*args.path):
        name = os.fsencode(path.name)
        try:
            name.decode()
        except UnicodeDecodeError:
            charset = charset_normalizer.from_bytes(name)
            print(charset.best())
            for res in charset:
                print(str(res))
            exit()
            target = path.parent / name.decode(charset['encoding'])
            if target.exists():
                raise RuntimeError(f'target exists: {target}')
            print(f'Fixing {target}')
            target = path.with_name(target)
            if not args.dryrun:
                os.rename(path, target)


if __name__ == '__main__':
    main()
