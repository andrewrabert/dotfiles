#!/usr/bin/env bash
set -e

show_help() {
    cat << EOF
usage: zstd-tar [OPTIONS] PATH [PATH..]

arguments:
    --fast      compression level 3 (default 22)
    --help      show help and exit
    --keep      do not remove source files after successful archiving
    -n NUM      number to process in parallel
EOF
}

zstd_compress() {
    if [ -n "$FAST" ]; then
        LEVEL=3
    else
        LEVEL=22
    fi
    # use nproc since -T0 uses number of cores, not threads
    zstd -f "-T$(nproc)" --ultra "-${LEVEL}" "$@"
}

process() {
    SOURCE="$(realpath "$1")"
    DEST="$(basename "$SOURCE").tar.zst"

    echo "Processing $SOURCE"

    if [ -f "$SOURCE" ]; then
        tar cf - -C "$(dirname "$SOURCE")" "$(basename "$SOURCE")" | zstd_compress -o "$DEST"
    elif [ -d "$SOURCE" ]; then
        find "$SOURCE" -printf '%P\0' | tar cf - -C "$SOURCE" --no-recursion --verbatim-files-from --null -T - | zstd_compress -o "$DEST"
    else
        exit 1
    fi
    if [ -n "$RM" ]; then
        rm -rf "$SOURCE"
    fi
}
RM=1
FAST=
PARALLEL=
while [ $# -gt 0 ]; do
    case "$1" in
        --keep)
            RM=
            shift
            ;;
        --fast)
            FAST=1
            shift
            ;;
        --help)
            show_help
            exit
            ;;
        -n)
            PARALELL="$2"
            shift
            shift
            ;;
        *)
            break
    esac
done

if [ $# -eq 0 ]; then
    show_help >&2
    printf '\nerror: no path specified\n' >&2
    exit 1
fi

if [ -n "$PARALELL" ]; then
    env_parallel.bash
    printf '%s\0' "$@" | env_parallel -0 -P "$PARALLEL" process
else
    for path in "$@"; do
        process "$path"
    done
fi
