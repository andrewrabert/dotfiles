#!/usr/bin/env python
import argparse
import pathlib
import subprocess
import sys
import tempfile


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        'data',
        nargs='?',
        default=sys.stdin,
        type=argparse.FileType('r')
    )
    args = parser.parse_args()

    sources = [
        pathlib.Path(line).absolute()
        for line in args.data.read().splitlines()
    ]
    parents = {tuple(path.parents) for path in sources}
    if len(parents) != 1:
        raise RuntimeError('varying parents')
    if len(sources) != len(set(sources)):
        raise RuntimeError('duplicate sources')

    with tempfile.NamedTemporaryFile() as tmp:
        with open(tmp.name, 'w') as h:
            h.write('\n'.join(path.name for path in sources))
        subprocess.run(['nvim', tmp.name])
        with open(tmp.name, 'r') as h:
            targets = [
                pathlib.Path(line.strip()).absolute()
                for line in h.readlines()
            ]

    if len(targets) != len(set(targets)):
        raise RuntimeError('duplicate targets')

    if len(sources) != len(targets):
        raise RuntimeError('num sources does not match num targets')

    for source, target in zip(sources, targets):
        if source == target:
            continue
        if target.exists():
            raise RuntimeError(f'target exists: "{source}" -> "{target}"')
        source.rename(target)


if __name__ == '__main__':
    main()
