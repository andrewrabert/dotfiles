#!/usr/bin/env python3
import argparse
import collections
import pathlib


def all_files(*paths):
    stack = []
    files = set()
    for path in paths:
        if not path.exists():
            raise ValueError(f"path does not exist: {path}")
        elif path.is_file():
            files.add(path)
        elif path.is_dir():
            stack.append(path)
    while stack:
        for path in stack.pop().iterdir():
            if path.is_dir():
                stack.append(path)
            else:
                files.add(path)
    return sorted(files)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--ignore-case", action="store_true")
    parser.add_argument("-c", "--count", action="store_true")
    parser.add_argument("path", type=pathlib.Path, nargs="*")
    args = parser.parse_args()

    files = set()
    for path in set(args.path or (pathlib.Path(),)):
        files.update(all_files(path))

    suffix_count = collections.Counter()
    for path in files:
        suffix = path.suffix
        if not suffix:
            continue
        if args.ignore_case:
            suffix = suffix.lower()
        if not suffix:
            print(path)
        suffix_count[suffix] += 1

    if args.count:
        for suffix, count in sorted(suffix_count.items(), key=lambda x: x[1]):
            print(count, suffix)
    else:
        for suffix in sorted(suffix_count):
            print(suffix)


if __name__ == "__main__":
    main()
