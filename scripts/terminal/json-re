#!/usr/bin/env python3
import argparse
import json
import re
import sys


def main():
    parser = argparse.ArgumentParser('json-flat')
    parser.add_argument('--key', metavar='PATTERN', help='key pattern')
    parser.add_argument('--value', metavar='PATTERN', help='value pattern')
    parser.add_argument(
        '-i', dest='ignorecase', action='store_true',
        help='ignore case')
    parser.add_argument(
        '-v', dest='invert', action='store_true', help='invert match')
    parser.add_argument(
        'data',
        nargs='?',
        default=sys.stdin,
        type=argparse.FileType('r')
    )
    args = parser.parse_args()

    data = json.load(args.data)

    assert isinstance(data, dict)
    for key, value in data.items():
        assert isinstance(value, str)

    flags = re.IGNORECASE if args.ignorecase else 0
    key_re = re.compile(args.key, flags=flags) if args.key else None
    value_re = re.compile(args.value, flags=flags) if args.value else None

    filtered = {}
    for key, value in data.items():
        if key_re:
            if key_re.search(key):
                if args.invert:
                    continue
            elif not args.invert:
                continue
        if value_re:
            if value_re.search(value):
                if args.invert:
                    continue
            elif not args.invert:
                continue

        filtered[key] = value

    print(json.dumps(filtered, indent=2, sort_keys=True))


if __name__ == '__main__':
    main()
