#!/usr/bin/env sh
set -e

ENV_ROOT="$HOME/.local/share/virtualenvs"

pyrealpath() {
    printf "%s" "$1" | python -c 'import os; import sys; print(os.path.realpath(sys.stdin.read()))'
}

if [ "$1" = 'prune' ]; then
    for p in "$ENV_ROOT/"*/.parent; do
        if [ -L "$p" ]; then
            real="$(pyrealpath "$p")"
            if ! [ -e "$real/.envrc" ]; then
                venvdir="$(dirname "$p")"
                echo Removing venv for "$real"
                rm -rf "$venvdir"
            fi
        fi
    done
    exit
fi

# Avoids dependency on realpath
parent="$(pyrealpath "$(pwd)")"

env_folder="$ENV_ROOT/$(printf "%s" "$parent" | sha256sum | awk '{print $1}')"

rm -rf "$env_folder" .envrc
pipenv --rm > /dev/null 2>&1 || true
unset VIRTUAL_ENV

if [ "$1" = '-d' ]; then
    exit
elif [ -n "$1" ]; then
    eval "$(pyenv sh-shell "$1")"
fi

mkdir -p "$ENV_ROOT"

if [ -e Pipfile ]; then
    pipenv --rm > /dev/null 2>&1 || true
    pipenv install
    env_folder=$(pipenv --venv)
elif command -v virtualenv > /dev/null 2>&1; then
    virtualenv -q -p python "$env_folder" > /dev/null
else
    python -m venv "$env_folder"
fi

ln -s "$parent" "$env_folder/.parent"

cat > "$env_folder/.envrc" << EOF
. "$env_folder/bin/activate"
# export PIP_USER even though it's disabled in pip.conf
# tox doesn't seem to respect the venv's pip.conf
export PIP_USER=0
EOF

cat > "$env_folder/pip.conf"<<EOF
[global]
user = false
EOF

(cd "$env_folder" && direnv allow)
cp "$env_folder/.envrc" .
"$env_folder/bin/pip" install -q --upgrade pip setuptools wheel

direnv allow
direnv reload
