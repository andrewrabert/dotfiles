#!/usr/bin/env sh
# manually close a notification if it has a timeout.
# dunst occasionally fails to close notifications https://github.com/dunst-project/dunst/issues/757

dunstify() {
    # seems safe to always pass --printid
    #   - passing multiple times is acceptable
    #   - passing with --help is acceptable
    /usr/bin/dunstify --printid "$@"
    ret=$?
    if [ "$ret" -gt 0 ]; then
        exit "$ret"
    fi
}

URGENCY='normal'
TIMEOUT=
PREV=
for arg in "$@"; do
    case "$arg" in
        --timeout=*)
            TIMEOUT="${arg#*=}"
            ;;
        --urgency=*)
            URGENCY="${arg#*=}"
            TIMEOUT=
            ;;
    esac
    case "$PREV" in
        -t|--timeout)
            TIMEOUT="$arg"
            ;;
        -u|--urgency)
            URGENCY="$arg"
            TIMEOUT=
            ;;
    esac
    PREV="$arg"
done

if [ -n "$TIMEOUT" ]; then
    TIMEOUT="$((TIMEOUT / 1000))"
else
    case "$URGENCY" in
        critical)
            ;;
        low)
            TIMEOUT=10
            ;;
        *)
            TIMEOUT=2
    esac
fi

output="$(dunstify "$@")"
printf '%s' "$output"
if [ -n "$TIMEOUT" ] && [ "$output" -eq "$output" ] 2> /dev/null; then
    (sleep "$TIMEOUT" && dunstify --close "$output") > /dev/null 2>&1 &
fi
