#!/usr/bin/env python
import argparse
import re
import subprocess
import sys


def get_edid_for_output(connector):
    xrandr = subprocess.run(
        ['xrandr', '--props'],
        check=True,
        stdout=subprocess.PIPE,
    )

    lines = [b.decode() for b in xrandr.stdout.splitlines()]
    for i, line in enumerate(lines):
        connector_match = re.match('^{} connected'.format(connector), line)
        if connector_match:
            for j in range(i + 1, len(lines)):
                edid_match = re.match(r'\s*EDID:', lines[j])
                if edid_match:
                    edid = ''
                    for k in range(j + 1, len(lines)):
                        if re.match(r'^\s*[0-9a-f]{32}$', lines[k]):
                            edid += lines[k].strip()
                        elif edid:
                            return bytes.fromhex(edid)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('output')
    args = parser.parse_args()

    edid = get_edid_for_output(args.output)
    sys.stdout.buffer.write(edid)


if __name__ == '__main__':
    main()
