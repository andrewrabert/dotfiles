#!/usr/bin/env python
import argparse
import json
import os
import pathlib

import mpd


def pretty_json(data):
    return json.dumps(data, indent=2, sort_keys=True, ensure_ascii=False)


def is_streaming(client):
    current_file = client.currentsong().get('file', '')
    return current_file.lower().startswith(('http://', 'https://'))


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        'action', choices=('toggle', 'next', 'prev'), nargs='?')
    args = parser.parse_args()

    runtime_dir = os.environ['XDG_RUNTIME_DIR']
    if runtime_dir:
        socket = pathlib.Path(runtime_dir) / 'mpd' / 'socket'
        if socket.exists():
            mpd_host = str(socket)

    client = mpd.MPDClient()
    client.connect(mpd_host)

    if args.action == 'toggle':
        if client.status()['state'] == 'play':
            if is_streaming(client):
                client.stop()
            else:
                client.pause()
        else:
            client.play()
    elif args.action == 'next':
        client.next()
    elif args.action == 'prev':
        client.previous()
    else:
        data = client.status()
        data.update(client.currentsong())
        print(pretty_json(data))


if __name__ == '__main__':
    main()
