#!/usr/bin/env python3
import argparse
import os
import shlex
import subprocess


def alacritty_args(args, hold=False, window_class=None):
    command_args = ['alacritty']
    if window_class:
        command_args.extend(['--class', window_class])
    if hold:
        command_args.append('--hold')
    if args:
        command_args.extend([
            '--command', 'zsh', '-ic', shlex.quote(shlex.join(args))
        ])
    return command_args


def wezterm_args(args, hold=False, window_class=None):
    pre_args = []
    post_args = []
    if window_class:
        post_args.extend(['--class', window_class])
    if hold:
        pre_args.extend(['--config', r'exit_behavior=\\"Hold\\"'])
    if args:
        post_args.extend([
            '--', 'zsh', '-ic', shlex.quote(shlex.join(args))
        ])
    commands_args = ['wezterm', *pre_args, 'start', '--always-new-process', *post_args]
    print(' '.join(commands_args))
    return commands_args


_TERMINALS = {
    'alacritty': alacritty_args,
    'wezterm': wezterm_args,
}


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--hold', action='store_true')
    parser.add_argument('--class', dest='window_class')
    parser.add_argument('--terminal', choices=_TERMINALS,
                        default='alacritty')
    parser.add_argument('args', nargs='*')
    args = parser.parse_args()

    command = _TERMINALS[args.terminal](
        args=args.args,
        hold=args.hold,
        window_class=args.window_class,
    )

    if 'I3SOCK' in os.environ:
        # remove as it can be stale.
        # maybe check for running process?
        os.environ.pop('I3SOCK')

    # TODO add support for sway
    print(command)
    subprocess.run(['i3-msg', '--', 'exec', '--no-startup-id', *command])


if __name__ == '__main__':
    main()
