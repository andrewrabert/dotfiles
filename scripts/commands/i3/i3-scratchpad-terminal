#!/usr/bin/env python3
import argparse
import time

import i3ipc


def show_scratchpad(conn, item):
    for output in conn.get_outputs():
        if output.primary:
            break

    max_aspect = 1.6
    size_ppt = 0.8

    # greater than 16:10
    if (output.rect.width / output.rect.height) > max_aspect:
        height = min(output.rect.width, output.rect.height)
        width = height * max_aspect
    else:
        width = output.rect.width
        height = output.rect.height

    width = int(width * size_ppt)
    height = int(height * size_ppt)

    item.command(
        'scratchpad show, '
        f'resize set width {width} px height {height} px, '
        'move position center'
    )


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--title')
    parser.add_argument('args', nargs='+')
    args = parser.parse_args()

    window_class = f'i3-scratchpad-{args.title or args.args[0]}'

    conn = i3ipc.Connection()

    found = False
    for item in conn.get_tree().find_instanced(window_class):
        found = True
        show_scratchpad(conn, item)
    if not found:
        command = [
            'exec',
            '--no-startup-id',
            'terminal',
            '--class', window_class,
            *args.args,
        ]
        conn.command(' '.join(command))
        for attempt in range(1, 10):
            for item in conn.get_tree().find_instanced(window_class):
                print('here')
                show_scratchpad(conn, item)
                return
            time.sleep(0.5)


if __name__ == '__main__':
    main()
