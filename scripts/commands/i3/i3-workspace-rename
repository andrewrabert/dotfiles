#!/usr/bin/env python3
import os
import subprocess

import i3ipc

CONN = i3ipc.Connection()


def fzf(data):
    proc = subprocess.run(
        ['fzf', '--black', '--prompt=', '--no-info', '--exact', '--no-sort',
         '--no-extended', '-i', '--layout=reverse', '--print-query'],
        input='\n'.join(data).encode(),
        stdout=subprocess.PIPE,
    )
    try:
        result = proc.stdout.decode().splitlines()[-1]
    except IndexError:
        result = None

    return result


def rofi():
    proc = subprocess.run(
        ['rofi', '-dmenu', '-p', '', '-no-tokenize'],
        stdout=subprocess.PIPE,
    )
    try:
        result = proc.stdout.decode().splitlines()[-1]
    except IndexError:
        result = None

    return result


def fuzzel(data):
    proc = subprocess.run(
        ['fuzzel', '--dmenu', '--no-fuzzy'],
        input='\n'.join(data).encode(),
        stdout=subprocess.PIPE,
    )
    try:
        result = proc.stdout.decode().splitlines()[-1]
    except IndexError:
        result = None

    return result


def main():
    focused = None
    for workspace in CONN.get_workspaces():
        if workspace.focused:
            focused = workspace

    if focused is None:
        raise RuntimeError()

    if 'XAUTHORITY' in os.environ:
        result = rofi()
    elif 'WAYLAND_DISPLAY' in os.environ:
        # rofi provides the best experience on wayland, even though non-native
        result = rofi()
        #result = fuzzel(cmds)
    else:
        result = fzf()

    if result is not None:
        number = int(focused.name.split(maxsplit=1)[0])
        new_name = result.strip()
        if new_name:
            new_name = f'{number} <b>{new_name}</b>'
        else:
            new_name = str(number)
        CONN.command(f'rename workspace to "{new_name}"')


if __name__ == '__main__':
    main()
