#!/usr/bin/env python
import argparse
import pathlib
import subprocess
import sys

EXTENSIONS = {
    '.avi',
    '.mov',
    '.mp4',
    '.webm',
}


def all_files(root):
    stack = [pathlib.Path(root)]
    files = []
    while stack:
        for path in stack.pop().iterdir():
            if path.is_file() and not path.is_symlink():
                files.append(path)
            elif path.is_dir():
                stack.append(path)
    return files


def mkvmerge(dest, *sources):
    subprocess.run(
        ['mkvmerge', '--quiet', '--output', dest, *sources],
        check=True)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('path', nargs='+', type=pathlib.Path)
    args = parser.parse_args()

    paths = set()
    for path in args.path:
        path = path.absolute()
        if path.is_file():
            paths.add(path)
        elif path.is_dir():
            paths.update(all_files(path))

    for path in sorted(paths):
        suffix = path.suffix.lower()

        if suffix == '.mkv':
            continue

        if suffix in EXTENSIONS:
            dest = path.with_suffix('.mkv')
            if dest.exists():
                raise RuntimeError(f'file exists: {path}')
            print(path)
            mkvmerge(dest, path)
            path.unlink()
        else:
            print(f'unrecognized extension: {path.suffix}', file=sys.stderr)


if __name__ == '__main__':
    main()
