#!/usr/bin/env python3
import argparse
import contextlib
import logging
import pathlib
import subprocess
import unittest

LOGGER = logging.getLogger('unittest-findtests')


def find_tests(name):
    tests = set()
    for suite in unittest.defaultTestLoader.discover(name):
        LOGGER.debug('suite %r', suite)
        for case in suite:
            LOGGER.debug('case %r', case)
            try:
                iter_case = iter(case)
            except TypeError as e:
                LOGGER.debug('case error %r', e)
                continue
            for test in iter_case:
                fullname = '.'.join([
                    test.__module__,
                    test.__class__.__qualname__,
                    test._testMethodName
                ])
                LOGGER.debug('found %s', fullname)
                tests.add(fullname)
    return tests


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--verbose', action='store_true')
    parser.add_argument('name', default=pathlib.Path().absolute(), nargs='?')
    args = parser.parse_args()

    if args.verbose:
        logging.basicConfig(level=logging.DEBUG)

    tests = find_tests(args.name)
    if False:
        # redirect output to make loud imports stfu
        with contextlib.redirect_stdout(subprocess.DEVNULL):
            with contextlib.redirect_stderr(subprocess.DEVNULL):
                tests = find_tests(args.name)

    print('\n'.join(sorted(tests)))


if __name__ == '__main__':
    main()
