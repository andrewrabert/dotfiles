#!/usr/bin/env python3
import argparse
import pathlib
import subprocess
import datetime
import tempfile


def all_files(root):
    stack = [root]
    files = []
    while stack:
        for path in stack.pop().iterdir():
            if path.is_dir():
                stack.append(path)
            else:
                files.append(path)
    return files


def ffmpeg_concat(dest, paths):
    with tempfile.NamedTemporaryFile() as tmp:
        pathlib.Path(tmp.name).write_text('\n'.join(
            f"file '{path}'"
            for path in paths
        ))
        subprocess.run(
            ['ffmpeg', 
             '-f', 'concat', 
             '-safe', '0', 
             '-i', tmp.name,
             '-c', 'copy',
             dest],
            check=True)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('path', type=pathlib.Path)
    parser.add_argument('--rm', action='store_true')
    parser.add_argument('-o', dest='output', type=pathlib.Path)
    args = parser.parse_args()

    files = sorted([
        path.absolute()
        for path in all_files(args.path)
    ])
    output = args.output
    base = pathlib.Path()
    if output is not None:
        if output.is_dir():
            base = output
            output = None
        elif output.name.endswith('.mkv') and output.parent.is_dir():
            output = output
        else:
            raise ValueError
    if output is None:
        output = base / 'ffmpeg_concat_{}.mkv'.format(
            datetime.datetime.now().isoformat().split('.')[0].replace('-', '').replace(':', ''))
    ffmpeg_concat(output, files)
    if args.rm:
        for path in files:
            path.unlink()


if __name__ == '__main__':
    main()
