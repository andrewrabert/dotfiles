#!/usr/bin/env sh
format_json() {
    jq -S 'reduce (.[] | select(.key | endswith("/") | not)) as $item ({}; setpath($item.key | split("/"); ($item.value | @base64d)))'
}

remove_prefix() {
    key="$(echo "$1" | sed 's/\//"\."/g')"
    key='."'"$key"'"'
    jq -r "$key"
}

show_usage() {
    cat << EOF
usage: consul-kv-nested [KEY]

Format Consul keys into a nested JSON structure.

    -h, --help      show help and exit
EOF
}

while true; do
    case "$1" in
        -h|--help)
            show_usage
            exit
            ;;
        --)
            shift
            break
            ;;
        *)
            break
            ;;
    esac
done

if [ -t 0 ]; then
    if [ "$#" -eq 0 ]; then
        consul kv export | format_json
    elif [ "$#" -eq 1 ]; then
        key="$(echo "$1" | sed 's/\/$//')"
        consul kv export -- "$key" | format_json | remove_prefix "$key"
    else
        show_usage >&2
        echo 'error: too many arguments' >&2
        exit 1
    fi
else
    format_json
    if [ "$#" -eq 0 ]; then
        format_json
    elif [ "$#" -eq 1 ]; then
        key="$(echo "$1" | sed 's/\/$//')"
        format_json | remove_prefix "$key"
    else
        show_usage >&2
        echo 'error: too many arguments' >&2
        exit 1
    fi
fi
