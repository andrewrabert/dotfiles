#!/usr/bin/env sh
set -e

STEAMAPPS_COMMON=~/.steam/steam/steamapps/common

show_help() {
    cat << EOF
usage: proton --prefix PATH PROGRAM [ARG ...]
    --help          show help and exit
    --list          list installed versions an exit
    --prefix PATH   use a custom prefix path
    --use VERSION   use specific version of proton
    --version       show program's version and exit
EOF
}

list_versions() {
    find "$STEAMAPPS_COMMON" -mindepth 1 -maxdepth 1 -name 'Proton *' -exec basename {} \; | awk '{print $2}' | sort --version-sort
}

export STEAM_COMPAT_CLIENT_INSTALL_PATH=~/.local/share/Steam

USE_PROTON_VERSION=system
SHOW_VERSION=
while [ $# -gt 0 ]; do
    case "$1" in
        --)
            break
            ;;
        --help)
            show_help
            exit
            ;;
        --list)
            list_versions
            exit
            ;;
        --prefix)
            mkdir -p -- "$2"
            STEAM_COMPAT_DATA_PATH="$(realpath -- "$2")"
            export STEAM_COMPAT_DATA_PATH
            shift
            shift
            ;;
        --use)
            USE_PROTON_VERSION="$2"
            shift
            shift
            ;;
        --version)
            SHOW_VERSION=1
            shift
            ;;
        -*)
            echo 'error: unrecognized argument (s)'>&2
            exit 1
            ;;
        *)
            break
            ;;
    esac
done

if [ $# -eq 0 ]; then
    show_help >&2
    exit 1
fi

if [ -z "$STEAM_COMPAT_DATA_PATH" ]; then
    export STEAM_COMPAT_DATA_PATH=~/.local/share/proton-pfx-"${USE_PROTON_VERSION:-default}"
    mkdir -p "$STEAM_COMPAT_DATA_PATH"
fi

if [ -n "$SHOW_VERSION" ]; then
    # initialize/upgrade prefix
    proton_run echo

    cat "$STEAM_COMPAT_DATA_PATH"/version
    exit
fi

if [ "$USE_PROTON_VERSION" = 'system' ]; then
    exec /usr/bin/proton run "$@"
elif [ -n "$USE_PROTON_VERSION" ]; then
    PROTON_BASE="$STEAMAPPS_COMMON/Proton $USE_PROTON_VERSION"
else
    PROTON_BASE="$STEAMAPPS_COMMON/$(find "$STEAMAPPS_COMMON" -maxdepth 1 -mindepth 1 -printf '%P\n' | grep '^Proton' | sort --version-sort | tail -n 1)"
fi
exec "$PROTON_BASE"/proton run "$@"
