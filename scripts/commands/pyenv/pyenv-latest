#!/usr/bin/env python3
import argparse
import asyncio


async def all_versions():
    proc = await asyncio.subprocess.create_subprocess_exec(
        'pyenv', 'install', '--list',
        stdout=asyncio.subprocess.PIPE)
    stdout, _ = await proc.communicate()
    if proc.returncode:
        raise RuntimeError(f'exit {proc.returncode}')
    return sorted(
        line.strip()
        for line in stdout.decode().splitlines()
    )


async def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('version', nargs='?', default='3',)
    args = parser.parse_args()

    versions = []
    for v in await all_versions():
        if not v.startswith(args.version):
            continue
        if v.endswith('-dev'):
            continue
        if 'a' in v:
            continue
        if 'b' in v:
            continue
        major, minor, patch = (int(i) for i in v.split('.'))
        versions.append((major, minor, patch))

    if not versions:
        parser.error('version not found')
        parser.exit(1)

    latest_version = '.'.join(str(v) for v in sorted(versions)[-1])
    print(latest_version)


if __name__ == '__main__':
    asyncio.run(main())
