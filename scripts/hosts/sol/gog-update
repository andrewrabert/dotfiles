#!/usr/bin/env python3
import pathlib
import subprocess

CACHE_DIR = pathlib.Path('~/.cache/lgogdownloader').expanduser()
CONFIG_DIR = pathlib.Path('~/.dotfiles/private/lgogdownloader').expanduser()
GOG_DIR = pathlib.Path('/storage/Games/PC/GOG.com')
IMAGE = 'docker.io/nvllsvm/lgogdownloader'


def files_to_mtime(root):
    stack = [root]
    files = {}
    while stack:
        for path in stack.pop().iterdir():
            if path.is_dir():
                stack.append(path)
            elif path.is_file():
                files[str(path)] = path.stat().st_mtime
    return files


def run_lgogdownloader():
    subprocess.run(
        ['podman', 'run',
         '--rm',
         '-e', 'HOME',
         '-v', f'{GOG_DIR}:/downloads',
         '-v', f'{CACHE_DIR}:/cache',
         '-v', f'{CONFIG_DIR}:/config',
         IMAGE],
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        check=True)


def main():
    CACHE_DIR.mkdir(parents=True, exist_ok=True)

    before = files_to_mtime(GOG_DIR)
    run_lgogdownloader()
    after = files_to_mtime(GOG_DIR)

    for path in sorted(set([*before.keys(), *after.keys()])):
        try:
            before_mtime = before[path]
        except KeyError:
            print('New:', path)
            continue

        try:
            after_mtime = after[path]
        except KeyError:
            print('Deleted:', path)
            continue

        if before_mtime != after_mtime:
            print('Modified:', path)


if __name__ == '__main__':
    main()
