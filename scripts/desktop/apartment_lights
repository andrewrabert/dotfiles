#!/usr/bin/env python3
import argparse

import requests



class Lights(object):
    base = 'http://atlas/lights'
    paths = ('monitor', 'windowsill', 'bedroom/long', 'bedroom/short')

    def request(self, body):
        for path in self.paths:
            requests.put(f'{self.base}/{path}', json=body)
            print(path)

    def off(self):
        body = {'mode': 'off'}
        self.request(body)

    def rainbow(self, interval=None, brightness=None):
        body = {'mode': 'rainbow'}
        if interval is not None:
            body['interval'] = interval
        if brightness is not None:
            body['brightness'] = brightness
        self.request(body)

    def color(self, color, interval=None, brightness=None):
        body = {'mode': 'color'}
        if interval is not None:
            body['interval'] = interval
        if brightness is not None:
            body['brightness'] = brightness
        body.update(color_to_ints(color))
        print(body)
        self.request(body)


def color_to_ints(color):
    colors = {}

    if len(color) not in (6, 8):
        raise Exception('Invalid Color')

    if len(color) == 8:
        white = int(color[6:8], 16)
        if white > 0:
            colors['white'] = white

    red = int(color[0:2], 16)
    if red > 0:
        colors['red'] = red
    green = int(color[2:4], 16)
    if green > 0:
        colors['green'] = green
    blue = int(color[4:6], 16)
    if blue > 0:
        colors['blue'] = blue

    return colors


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('mode')
    parser.add_argument('-b', '--brightness', type=int)
    parser.add_argument('-i', '--interval', type=int)
    parser.add_argument('-c', '--color')
    args = parser.parse_args()

    lights = Lights()
    if args.mode == 'off':
        lights.off()
    elif args.mode == 'rainbow':
        lights.rainbow(brightness=args.brightness,
                       interval=args.interval)
    elif args.mode == 'color':
        lights.color(args.color,
                     brightness=args.brightness,
                     interval=args.interval)
    else:
        parser.print_help()


if __name__ == '__main__':
    main()
