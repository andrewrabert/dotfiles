## Hey - this code is a fucking mess
import json
import argparse
import random
import sys
import os
import lastfm_genre_config

import requests 
import taglib

class musicArtist:
    def __init__(self,artist,genre):
        self.artist = artist
        self.genre = genre


def genreSelector(artistName):
    topGenres = genreFinder(artistName)

    counter = 0
    for genre in topGenres:
        counter += 1
        print(str(counter) + " - " + genre)

    if counter == 0:
        print('\n')
        return input("No results found. Please enter a genre: ")
    else:
        print((len(artistName) + 8) * '-')
        print("C - Custom")

        print("\n")

        invalidInput = True
        while(invalidInput):
            x = input("Selection: ")
            if x.upper() == 'C':
                return input("Enter custom genre: ")
            elif 1 <= int(x) <= counter:
                invalidInput = False
                return topGenres[int(x) - 1]


def genreFinder(artistName):
    artistNameFormatted = artistName.replace(" ", "%20") 
    artistNameFormatted = artistName.replace("/", " ") 
    artistNameFormatted = artistName.replace("\\", " ") 
    topTags_url = "http://ws.audioscrobbler.com/2.0/?method=artist.gettoptags&artist=" + artistNameFormatted + "&api_key=" + lastfm_genre_config.apiKey + "&format=json"
    topTagsResponse = requests.get(topTags_url)
    if topTagsResponse.status_code == 200:
        topTagsJson = json.loads(topTagsResponse.text)

        topGenre = []

        try:
            if topTagsJson['error'] == 6:
                return topGenre
        except:
            pass

        for x in range(6):
            try:
                genre = topTagsJson["toptags"]["tag"][x]["name"]
                firstChar = genre[0].upper()
                genre = firstChar + genre[1::]
                topGenre.append(genre)
            except:
                break

        return topGenre
    else:
        sys.exit()

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='De-Generate Acronym')
    parser.add_argument('directory', metavar='DIR',help='directory')
     
    args = parser.parse_args()
    
#    topGenre = genreFinder(artistName=args.artistName)

#    print(topGenre)
    directory = args.directory

    os.system('clear')

    artistGenres = []

    for (dirpath, dirnames, filenames) in os.walk(directory):
        for files in filenames:
            if files[-5:] == '.flac' or files[-4:] == '.mp3':
                f = taglib.File(dirpath + "/" + files)
                os.system('clear')
                albumArtist = f.tags["ALBUMARTIST"][0]
                if not any(x.artist == albumArtist for x in artistGenres):
                    print("--- " + albumArtist + " ---")
                    selectedGenre = genreSelector(albumArtist)
                    artistGenres.append(musicArtist(albumArtist,selectedGenre))
                    f.tags["GENRE"] = selectedGenre
                    retval = f.save()
                else:
                    for x in artistGenres:
                        if x.artist == albumArtist:
                            f.tags["GENRE"] = selectedGenre
                            retval = f.save()
                            break
                

    os.system('clear')

#    for stuff in artistGenres:
#        print(stuff.artist + " " + stuff.genre)

#        if os.path.isdir(os.path.join(directory,dirnames)) and not dirnames == './' :
#            artistName = dirpath
#            print(artistName)
#            topGenre = genreFinder(artistName)
#            print(artistName + " : " + topGenre[0])
