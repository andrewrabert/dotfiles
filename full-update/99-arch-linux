#!/usr/bin/env python3
import pathlib
import subprocess


def is_unit_enabled(name, user=False):
    proc = subprocess.run(
        ['systemctl',
         '--user' if user else '--system',
         'show',
         '--property=UnitFileState',
         '--',
         name],
        stdout=subprocess.PIPE,
        check=True)
    match proc.stdout.decode().strip():
        case 'UnitFileState=enabled':
            return True
        case 'UnitFileState=disabled':
            return False
        case _:
            raise RuntimeError


def enable_unit(name, now=False, user=False):
    if is_unit_enabled(name, user=user):
        return
    print(f'Enabling unit {name} (user={user})')
    args = []
    if not user:
        args.append('sudo')

    args.extend([
        'systemctl',
        '--user' if user else '--system',
        'enable',
    ])
    if now:
        args.append('--now')
    args.extend(['--', name])
    subprocess.run(args, check=True)


def main():
    if not pathlib.Path('/etc/arch-release').exists():
        return

    enable_unit('fstrim.timer', now=True)


if __name__ == '__main__':
    main()
