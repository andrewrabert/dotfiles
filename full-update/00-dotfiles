#!/usr/bin/env sh
VERBOSE=
PROVISION=
while [ $# -gt 0 ]; do
    case "$1" in
        -v)
            VERBOSE=1
            shift
            ;;
        --provision)
            PROVISION=1
            shift
            ;;
        *)
            echo 'error: unrecognized arguments' >&2
            exit 1
    esac
done

MAGENTA='\033[1;35m'
RESET='\033[0m'

update_non_user() {
    dotfiles_root="$1"
    tag="$2"
    backup_root="$dotfiles_root/non-user/$tag"
    if [ -d "$backup_root" ]; then
        for source in $(find "$backup_root" -type f); do
            target=${source#$backup_root}
            if test -f "$target" || [ "$tag" != 'common' ]; then
                if ! sudo diff "$source" "$target" > /dev/null 2>&1 ; then
                    echo Syncing "$target"
                    sudo mkdir -p "$(dirname "$target")"
                    sudo cp "$source" "$target"
                elif [ -n "$VERBOSE" ]; then
                    echo Found "$tag" "$target"
                fi
            fi
        done
    fi
}

update_repo() {
    dotfiles_root="$2"
    if [ -d "$dotfiles_root/.git" ]; then
        printf "%bUpdating %s (%s)...%b\n" "$MAGENTA" "$1" "$dotfiles_root" "$RESET"
        git auto-update "$dotfiles_root"
    fi

    if [ -n "$PROVISION" ]; then
        printf "%bUpdating non-user files %s (%s)...%b\n" "$MAGENTA" "$1" "$dotfiles_root" "$RESET"
        if command -v sudo > /dev/null; then
            update_non_user "$dotfiles_root" common
            update_non_user "$dotfiles_root" "$(hostname)"

            if command -v pacman > /dev/null; then
                update_non_user "$dotfiles_root" _archlinux
            fi
        fi
    fi
}

update_repo "DOTFILES" "$DOTFILES"


for d in $(env | grep ^DOTFILES_ | sort); do
    name="$(echo "$d" | cut -d = -f 1)"
    loc="$(echo "$d" | cut -d = -f 2)"
    update_repo "$name" "$loc"
done
